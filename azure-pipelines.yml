trigger: none

   #batch: true
  # branches:
  #   include:
  #     - main

pool:
  vmImage: 'ubuntu-22.04'

#lockBehavior: sequential
#stages:
# - stage: BuildandDeployStage
#   jobs:
#   - job: BuildAndDeploy
#     displayName: 'Build and Deploy Job'
    #pool: server
    #steps:
    # - task: AzureStaticWebApp@0
    #   inputs:
    #     app_location: '/src'
    #     api_location: 'api'
    #     output_location: '/src'
    #     azure_static_web_apps_api_token: $(deployment_token)
    #     repo_token: $(GITHUB_TOKEN)
    #     action: 'upload'
    # - task: ManualValidation@1
    #   inputs:
    #     notifyUsers: 'sagpatel@microsoft.com'
    #     approvers: 'sagpatel@microsoft.com'
    #     allowApproversToApproveTheirOwnRuns: true
    # - task: CmdLine@2
    #   inputs:
    #     script: 'echo "BuildandDeploy"'
  #- stage: ExecuteCommands
    # dependsOn: BuildandDeployStage
    #jobs:
    # - job: ExecuteCommands
    #   displayName: 'Execute Commands'
    #   strategy:
    #     parallel: 0
    # - stage: SendEmail
    #   jobs:
    #    - job: SendEmail
    #      steps:
    #       - task: Bash@3
    #         inputs:
    #           targetType: 'inline'
    #           script: |
    #             # Send an email with the file attached
    #             echo "The file has been generated and stored on the self-hosted agent. Please find the attached file." | mail -s "Pipeline File" -a /path/to/self-hosted-agent/directory/yourfile_part_* sagpatel@microsoft.com
          # - task: CmdLine@2
          #   inputs:
          #     script: 'echo "Hello"'
          # - task: SendEmail@1
          #   inputs:              
          #     To: 'sagpatel@microsoft.com'
          #     From: 'sagpatel@microsoft.com'
          #     Subject: 'Pipeline File'
          #     Body: 'The file has been uploaded. You can download it from the following link: https://your-storage-account.blob.core.windows.net/your-container/your-blob-prefix/yourfile.zip'

  

# - job: ClosePullRequest
#   displayName: 'Close Pull Request Job'
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - task: AzureStaticWebApp@0
#     inputs:
#       azure_static_web_apps_api_token: $(deployment_token)
#       action: 'close'
  # - task: PublishPipelineArtifact@1
  #   inputs:
  #     targetPath: '$(Pipeline.Workspace)'
  #     artifact: 'Demo'
  #     publishLocation: 'pipeline'
# jobs:
# - job: A
#   steps:
#   - bash: echo "A"
#steps:

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'MCAPS-Support-REQ-73994-2024-SagarPatel (7f57655a-cc45-499d-bcc5-673c62b0f89f)'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     addSpnToEnvironment: true
#     inlineScript: |
#       subscription_id=$(az account list --query "[?isDefault].id"|jq -r '.[0]')
#       echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$(CLIENT_ID)"
#       echo "##vso[task.setvariable variable=ARM_TENANT_ID]16b3c013-d300-468d-ac64-7eda0820b6d3"
#       echo "##vso[task.setvariable variable=ARM_USE_MSI]"
#       echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscription_id"
steps:
    # - task: AzureCLI@2
    #   displayName: 'Set Environment Variables and import metastore'
    #   inputs:
    #     azureSubscription: 'Cx-Test'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     useGlobalConfig: true
    #     #workingDirectory: 'infrastructure/resourcegroup/soda-shared-services/databricks/metastore-uc-deployment'
    #     inlineScript: |
    #       export ARM_USE_MSI=true
    #       export ARM_SUBSCRIPTION_ID=7f57655a-cc45-499d-bcc5-673c62b0f89f
    #       export ARM_TENANT_ID=72f988bf-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    #       az login --identity 
    #       az account set -s "7f57655a-cc45-499d-bcc5-673c62b0f89f"
    #       $accessToken = az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 --query "accessToken" --output tsv
    #       curl -s -H 'Accept:application/json' -H 'Authorization:Bearer $accessToken' https://dev.azure.com/sagpatel0597/_apis/projects
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'uamanagedidentity'
        scriptType: 'batch'
        scriptLocation: 'inlineScript'
        inlineScript: |
          terrafrom 
     
          # - task: CmdLine@2
          #   inputs:
          #     script: |
          #       export ARM_USE_MSI=true
          #                 export ARM_SUBSCRIPTION_ID=7f57655a-cc45-499d-bcc5-673c62b0f89f
          #                 export ARM_TENANT_ID=16b3c013-d300-468d-ac64-7eda0820b6d3
          #                 az login --identity 
          #                 az account set -s "7f57655a-cc45-499d-bcc5-673c62b0f89f"
          #                 $accessToken = az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 --query "accessToken" --output tsv
          #                 curl -s -H 'Accept:application/json' -H 'Authorization:Bearer $accessToken' https://dev.azure.com/sagpatel0597/_apis/projects